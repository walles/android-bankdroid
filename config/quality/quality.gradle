apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

final configDir = "${rootDir}/config/quality"
final isAndroid = (
        project.plugins.hasPlugin("com.android.application") ||
                project.plugins.hasPlugin("com.android.library"))

if (isAndroid) {
    // These are automatically added for Java projects
    task checkstyleMain(type: Checkstyle) {
        source 'src/main'
        check.dependsOn 'checkstyleMain'
    }
    task checkstyleTest(type: Checkstyle) {
        source 'src/test'
        check.dependsOn 'checkstyleTest'
    }
}

tasks.withType(Checkstyle) {
    configFile rootProject.file("${configDir}/checkstyle/checkstyle.xml")

    include '**/*.java'
    classpath = files()

    ignoreFailures false
}

// See: https://docs.gradle.org/current/dsl/org.gradle.api.plugins.quality.CheckstyleExtension.html
checkstyle {
    // TODO https://github.com/jshiell/checkstyle-idea/blob/dbe595028c3488400790e6caed2f122fba0bded1/README#L13-19
    toolVersion '6.1.1'
    configProperties.checkstyleSuppressionsPath = file("${configDir}/checkstyle/suppressions.xml").absolutePath
}

if (isAndroid) {
    // This is an Android module, configure Android Lint!
    android {
        lintOptions {
            abortOnError true
            warningsAsErrors true

            // FIXME: This file contains *far* too many disabled checks. Somebody think of the children!
            lintConfig file("${configDir}/lint/lint.xml")

            textOutput "stdout"
            textReport true

            htmlReport true
            // optional path to report (default will be lint-results.html in the builddir)
            htmlOutput file("$project.buildDir/reports/lint/lint.html")
        }
    }

    check.dependsOn 'lint'
}

tasks.withType(FindBugs) {
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${configDir}/findbugs/findbugs-filter.xml")

    if (isAndroid) {
        classes = files("$project.buildDir/intermediates/classes")
    }

    source 'src'
    include '**/*.java'
    exclude '**/generated/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()

    // FindBugs works on class files, make sure they exist
    dependsOn(isAndroid ? 'compileDebugSources' : 'compileJava')
}

task pmd(type: Pmd) {
    ruleSetFiles = files("${configDir}/pmd/pmd-ruleset.xml")
    ignoreFailures = false
    consoleOutput = true
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/generated/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }

    // For Java projects, the PMD plugin configures itself, but on Android
    // we need to do it ourselves
    if (isAndroid) {
        check.dependsOn 'pmd'
    }
}
